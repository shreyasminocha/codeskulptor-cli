#!/usr/bin/env bash

COMMAND="$1"
FILE="$2"
NAME="${3:-$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 11 ; echo '')}"

OPTIND=4 # COMMAND, FILE, NAME, ...options
while getopts ':b:v:' option; do
    case "$option" in
        b)
            BUCKET="$OPTARG"
            ;;
        v)
            VERSION="$OPTARG"
            ;;
    esac
done

BUCKET="${BUCKET:-user306}"
BUCKET_URI="https://codeskulptor-${BUCKET}.commondatastorage.googleapis.com"

EXT="py"
if [ $BUCKET == "comp140" ]; then
    EXT="py3"
fi

if [ -z ${VERSION+x} ]; then
    REMOTE_FILE="${BUCKET}_${NAME}.${EXT}"
else
    REMOTE_FILE="${BUCKET}_${NAME}_${VERSION}.${EXT}"
fi

download() {
    curl -s "$BUCKET_URI/$REMOTE_FILE" -o "$FILE"
}

upload() {
    # account identifier
    GOOGLE_ACCESS_ID='GOOGXAAMGSTWEXTMWEN3GH7F'

    # decoded (base64) from `form#codeform input#policy` on CodeSkulptor
    # do not change *at all* unless you know what you're doing
    POLICY='{"expiration": "2022-01-01T12:00:00.000Z",

  "conditions": [
    {"bucket": "codeskulptor-user306"},
    ["starts-with", "$key", "user306"],
    ["eq", "$Content-Type", "text/x-python"],
    ["content-length-range", 0, 65536]
  ]
}
'

    # base64-encoded signature of the policy
    # created with a key associated with the account described by the access ID
    SIGNATURE='WcXIAnNTPO7Wgf60wI5D5gw6c50='

    # These values were lifted from fields in `form#codeform` on CodeSkulptor.
    # Should the values of those fields change, these would also need to be
    # updated.

    # See also: https://cloud.google.com/storage/docs/xml-api/post-object

    curl --fail -X POST \
        -F "key=$REMOTE_FILE" \
        -F 'Content-Type=text/x-python' \
        -F "GoogleAccessId=$GOOGLE_ACCESS_ID" \
        -F "Policy=$(echo -n "$POLICY" | base64 -w 0)" \
        -F "Signature=$SIGNATURE" \
        -F "file=@$FILE" \
        "$BUCKET_URI"

    STATUS_CODE="$?"
    if [ "$STATUS_CODE" -eq 0 ]; then
        echo "https://py3.codeskulptor.org/#$REMOTE_FILE"
    else
        echo 'An error occurred while uploading the file'
        exit "$STATUS_CODE"
    fi
}

help_text() {
    cat << \EOT
NAME
    csk â€” CodeSkulptor unofficial CLI

DESCRIPTION
    csk is a CLI tool to upload files to and download files from CodeSkulptor.

USAGE
    csk SUBCOMMAND FILE [NAME] [OPTIONS]

SUBCOMMANDS
    u | upload		Upload files to CodeSkulptor

        The file (or STDIN if FILE is -), will be uploaded.
        A CodeSkulptor URL will be outputted to STDOUT.

    d | download	Download files from CodeSkulptor

        The file will be downloaded and saved to the path specified
        or outputted to STDOUT if FILE is -.

OPTIONS
    -b		[str]	Bucket ('user306' by default)
    -v		[int]	File version

EXAMPLES
    Download /#user306_U0CqjtUA8X_0.py:

        $ csk d file.py U0CqjtUA8X -v 0

    Download /#examples140_modimport.py:

        $ csk d file.py modimport -b examples140

    Output /#user306_U0CqjtUA8X_0.py to STDOUT:

        $ csk d - U0CqjtUA8X -v 0

    Upload example.py to a random name:

        $ csk u example.py
        https://py3.codeskulptor.org/#user306_Xo0qphJfsM2.py

    Upload example.py to /#user306_example_0.py:

        $ csk u example.py example -v 0
        https://py3.codeskulptor.org/#user306_example_0.py
EOT
}

case "$COMMAND" in
    d | dl | down | download)
        download
    ;;

    u | ul | up | upload)
        upload
    ;;

    help | -h | --help)
        help_text
    ;;

    * )
        echo "Invalid command '$COMMAND'"
        echo
        help_text
        exit 1
    ;;
esac
